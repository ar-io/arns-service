openapi: 3.1.0
swagger: 2.0.0
info:
  title: ArNS Microservice
  version: 0.1.0
description: A koa microservice that provides API interface for fetching and retrieving ArNS related Smartweave contracts.
servers:
  - url: '/v1'

components:
  parameters:
    contractTxId:
      in: path
      name: contractTxId
      required: true
      description: Transaction ID of the contract.
      schema:
        type: string
        example: 'bLAgYxAdX2Ry-nt6aH2ixgvJXbpsEYm28NgJgyqfs-U'
    field:
      in: path
      name: field
      required: true
      description: Top level field for a contract.
      schema:
        type: string
        example: 'records'
    nestedPath:
      in: path
      name: nestedPath
      required: true
      description: The path to the object in the state
      schema:
        type: string
        example: 'records/1984'
    walletAddress:
      in: path
      name: walletAddress
      required: true
      description: The wallet address.
      schema:
        type: string
        example: 'QGWqtJdLLgm2ehFWiiPzMaoFLD50CnGuzZIPEdoDRGQ'
    name:
      in: path
      name: name
      required: true
      description: The name of the record to return.
      schema:
        type: string
        example: 'ario'
    blockHeight:
      name: blockHeight
      in: query
      required: false
      description: Evaluate the contract up to a specific block height. Only applicable if sortKey is not provided.
      schema:
        type: number
    sortKey:
      name: sortKey
      in: query
      required: false
      description: Evaluate the contract at up to a specific sort key. Only applicable if blockHeight is not provided.
      schema:
        type: string
    function:
      name: function
      in: query
      required: false
      description: Filter contract interactions by provided function name.
      example: 'evolve'
      schema:
        type: string
    page:
      name: page
      in: query
      required: false
      default: 1
      description: The page of results to return. 1 indexed. Minimum of 1, maximum of MAX_SAFE_INTEGER.
      schema:
        type: number
        maximum: MAX_SAFE_INTEGER
        minimum: 1
    pageSize:
      name: pageSize
      in: query
      required: false
      default: 100
      description: The number of results per page. Minimum of 1, maximum of 1000.
      schema:
        type: number
        maximum: 1000
        minimum: 1
  responses:
    BadRequest:
      description: Invalid request.
      content:
        application/json:
          schema:
            type: string
            example: 'Invalid block height, must be a single integer'
    NotFound:
      description: The requested resource was not found.
      content:
        application/json:
          schema:
            type: string
            example: 'Contract not found'
    InternalServerError:
      description: An internal server error occurred.
      content:
        application/json:
          schema:
            type: string
            example: 'Internal server error'
    BlocklistedContract:
      description: The requested contract is blocklisted.
      content:
        application/json:
          schema:
            type: string
            example: 'Contract is blocklisted'
  schemas:
    ArNsContractState:
      type: object
      properties:
        name:
          type: string
          description: The name of the contract.
        ticker:
          type: string
          description: The ticker of the contract.
        owner:
          type: string
          description: The owner of the contract.
        evolve:
          type: string
          description: The evolved source code transaction ID of the contract.
        canEvolve:
          type: boolean
          description: Flag indicating if the contract can evolve.
        records:
          type: object
          description: The records in the contract.
        balances:
          type: object
          description: The balances in the contract.
    EvaluationOptions:
      type: object
      properties:
        sourceType:
          type: string
          enum: ['arweave', 'other']
        internalWrites:
          type: boolean
        useKVStorage:
          type: boolean
        remoteStateSyncEnabled:
          type: boolean
        waitForConfirmation:
          type: boolean
        maxInteractionEvaluationTimeSeconds:
          type: integer
        throwOnInternalWriteError:
          type: boolean
    ContractInteraction:
      type: array
      description: The interactions for a contract, including their validity
      example:
        [
          {
            'height': 1242905,
            'input':
              {
                'function': 'evolve',
                'value': 'PdBWdSgiNcLw4ge1kveUf8wORcdSaMJsdVXqlQFMPUg',
              },
            'owner': 'QGWqtJdLLgm2ehFWiiPzMaoFLD50CnGuzZIPEdoDRGQ',
            'valid': true,
            'id': '2wszuZi_rwoOFjowdH7GLbgdeIZBaGbMLXiOuIV-6_0',
          },
        ]
    PagesContext:
      type: object
      description: The context for paginated results
      properties:
        page:
          type: integer
          description: The current page of results - 1 indexed
          example: 1
        pageSize:
          type: integer
          description: The number of results per page
          example: 10
        totalItems:
          type: integer
          description: The total number of results
          example: 100
        totalPages:
          type: integer
          description: The total number of pages
          example: 10
paths:
  /contract/{contractTxId}:
    get:
      summary: Fetches a contract state by its transaction id using Warp
      description: Fetches a contract state by its transaction id using Warp
      parameters:
        - $ref: '#/components/parameters/contractTxId'
        - $ref: '#/components/parameters/blockHeight'
        - $ref: '#/components/parameters/sortKey'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  contractTxId:
                    type: string
                    example: 'bLAgYxAdX2Ry-nt6aH2ixgvJXbpsEYm28NgJgyqfs-U'
                  state:
                    $ref: '#/components/schemas/ArNsContractState'
                  sortKey:
                    type: string,
                    example: '000001301946,0000000000000,d2efe5278648460ed160e1d8a28fb86ab686e36cf14a3321d0a2b10c6851ea99'
                  evaluationOptions:
                    $ref: '#/components/schemas/EvaluationOptions'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/BlocklistedContract'
        '404':
          $ref: '#/components/responses/NotFound'
        '503':
          $ref: '#/components/responses/InternalServerError'

  /contract/{contractTxId}/read/{functionName}:
    get:
      summary: Get the result of a contract read interaction with input parameters
      description: Retrieves the result for a specific contract read interaction with given parameters. Use query params for input parameters.
      parameters:
        - $ref: '#/components/parameters/contractTxId'
        - in: path
          name: functionName
          required: true
          schema:
            type: string
            example: 'gatewayRegistry'
          description: The read interaction on the contract you want to call (e.g. gatewayRegistry, rankedGatewayRegistry, etc)
      responses:
        '200':
          description: Successful response with the price details.
          content:
            application/json:
              schema:
                type: object
                properties:
                  contractTxId:
                    type: string
                    example: 'bLAgYxAdX2Ry-nt6aH2ixgvJXbpsEYm28NgJgyqfs-U'
                  result:
                    type: object
                    description: The returned result of the read interaction from the Smartweave contract
                    example: {}
                  evaluationOptions:
                    $ref: '#/components/schemas/EvaluationOptions'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/BlocklistedContract'
        '404':
          $ref: '#/components/responses/NotFound'
        '503':
          $ref: '#/components/responses/InternalServerError'

  /contract/{contractTxId}/price:
    get:
      summary: Get contract price for interaction and input
      description: Retrieves the price for a specific contract based on given parameters.
      parameters:
        - $ref: '#/components/parameters/contractTxId'
        - $ref: '#/components/parameters/name'
        - in: query
          name: interactionName
          required: true
          schema:
            type: string
            example: 'extendRecord'
          description: Name of the interaction, e.g., 'buyRecord', 'extendRecord', 'increaseUndernameCount', 'submitAuctionBid'.
        - in: query
          name: years
          required: false
          schema:
            type: integer
            example: 1
          description: Number of years for the contract action, applicable if interactionName is 'extendRecord' or 'buyRecord'.
        - in: query
          name: qty
          required: false
          schema:
            type: integer
          description: The number associated with the interaction, application if interactionName is 'increaseUndernameCount', or 'submitAuctionBid'.
      responses:
        '200':
          description: Successful response with the price details.
          content:
            application/json:
              schema:
                type: object
                properties:
                  contractTxId:
                    type: string
                    example: 'bLAgYxAdX2Ry-nt6aH2ixgvJXbpsEYm28NgJgyqfs-U'
                  result:
                    type: object
                    description: The returned result of the read interaction from the Smartweave contract
                    properties:
                      input:
                        type: object
                        description: Input parameters used to calculate the price for the provided interaction
                        example:
                          {
                            'function': 'priceForInteraction',
                            'interactionName': 'buyRecord',
                            'name': 'test-name',
                            'years': 1,
                          }
                      price:
                        type: number
                        description: Calculated price of the contract.
                  evaluationOptions:
                    $ref: '#/components/schemas/EvaluationOptions'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/BlocklistedContract'
        '404':
          $ref: '#/components/responses/NotFound'
        '503':
          $ref: '#/components/responses/InternalServerError'

  /contract/{contractTxId}/{field}:
    get:
      deprecated: true
      summary: Returns the field in the contract state for a given transaction id. For traversing contract state, use /contract/{contractTxId}/state/{nestedPath}
      description: Returns the field in the contract state for a given transaction id. For traversing contract state, use /contract/{contractTxId}/state/{nestedPath}
      parameters:
        - $ref: '#/components/parameters/contractTxId'
        - $ref: '#/components/parameters/blockHeight'
        - $ref: '#/components/parameters/sortKey'
        - $ref: '#/components/parameters/field'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  contractTxId:
                    type: string
                    example: 'bLAgYxAdX2Ry-nt6aH2ixgvJXbpsEYm28NgJgyqfs-U'
                  field:
                    type: any
                    example: {}
                  sortKey:
                    type: string,
                    example: '000001301946,0000000000000,d2efe5278648460ed160e1d8a28fb86ab686e36cf14a3321d0a2b10c6851ea99'
                  evaluationOptions:
                    $ref: '#/components/schemas/EvaluationOptions'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/BlocklistedContract'
        '404':
          $ref: '#/components/responses/NotFound'
        '503':
          $ref: '#/components/responses/InternalServerError'

  /contract/{contractTxId}/state/{nestedPath}:
    get:
      summary: Returns the field in the contract state for a given transaction id. Allows traversing up to 3 levels deep in the contract state.
      description: Returns the field in the contract state for a given transaction id. Allows traversing up to 3 levels deep in the contract state.
      parameters:
        - $ref: '#/components/parameters/contractTxId'
        - $ref: '#/components/parameters/blockHeight'
        - $ref: '#/components/parameters/sortKey'
        - $ref: '#/components/parameters/nestedPath'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  contractTxId:
                    type: string
                    example: 'bLAgYxAdX2Ry-nt6aH2ixgvJXbpsEYm28NgJgyqfs-U'
                  result:
                    type: any
                    example: {}
                  sortKey:
                    type: string,
                    example: '000001301946,0000000000000,d2efe5278648460ed160e1d8a28fb86ab686e36cf14a3321d0a2b10c6851ea99'
                  evaluationOptions:
                    $ref: '#/components/schemas/EvaluationOptions'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/BlocklistedContract'
        '404':
          $ref: '#/components/responses/NotFound'
        '503':
          $ref: '#/components/responses/InternalServerError'

  /contract/{contractTxId}/records:
    get:
      summary: Returns the record objects for a given contract, who's object parameters match query parameters
      parameters:
        - $ref: '#/components/parameters/contractTxId'
        - $ref: '#/components/parameters/blockHeight'
        - $ref: '#/components/parameters/sortKey'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  contractTxId:
                    type: string
                    example: 'bLAgYxAdX2Ry-nt6aH2ixgvJXbpsEYm28NgJgyqfs-U'
                  records:
                    type: array
                    example:
                      [
                        'testname3':
                          {
                            'undernames': 100,
                            'startTimestamp': 1694101828,
                            'type': 'lease',
                            'contractTxId': 'gh673M0Koh941OIITVXl9hKabRaYWABQUedZxW-swIA',
                            'endTimestamp': 1714145976,
                          },
                        'testname11':
                          {
                            'undernames': 100,
                            'startTimestamp': 1694101828,
                            'type': 'lease',
                            'contractTxId': 'gh673M0Koh941OIITVXl9hKabRaYWABQUedZxW-swIA',
                            'endTimestamp': 1714581732,
                          },
                      ]
                  sortKey:
                    type: string,
                    example: '000001301946,0000000000000,d2efe5278648460ed160e1d8a28fb86ab686e36cf14a3321d0a2b10c6851ea99'
                  evaluationOptions:
                    $ref: '#/components/schemas/EvaluationOptions'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/BlocklistedContract'
        '404':
          $ref: '#/components/responses/NotFound'
        '503':
          $ref: '#/components/responses/InternalServerError'

  /contract/{contractTxId}/records/{name}:
    get:
      summary: Returns the record object for a given contract and name
      parameters:
        - $ref: '#/components/parameters/contractTxId'
        - $ref: '#/components/parameters/blockHeight'
        - $ref: '#/components/parameters/sortKey'
        - $ref: '#/components/parameters/name'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  contractTxId:
                    type: string
                    example: 'bLAgYxAdX2Ry-nt6aH2ixgvJXbpsEYm28NgJgyqfs-U'
                  name:
                    type: string
                    example: 'ario'
                  record:
                    type: object
                    properties:
                      contractTxId:
                        type: string
                        example: 'I-cxQhfh0Zb9UqQNizC9PiLC41KpUeA9hjiVV02rQRw'
                      type:
                        type: string
                        example: 'lease'
                      startTimestamp:
                        type: number
                        example: 162781440
                      endTimestamp:
                        type: number
                        example: 172781440
                      undernames:
                        type: number
                        example: 10
                  owner:
                    type: string
                    example: 'QGWqtJdLLgm2ehFWiiPzMaoFLD50CnGuzZIPEdoDRGQ'
                  sortKey:
                    type: string
                    example: '000001301946,0000000000000,d2efe5278648460ed160e1d8a28fb86ab686e36cf14a3321d0a2b10c6851ea99'
                  evaluationOptions:
                    $ref: '#/components/schemas/EvaluationOptions'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/BlocklistedContract'
        '404':
          $ref: '#/components/responses/NotFound'
        '503':
          $ref: '#/components/responses/InternalServerError'

  /contract/{contractTxId}/balances/{walletAddress}:
    get:
      summary: Returns the balance given contract and wallet address
      parameters:
        - $ref: '#/components/parameters/contractTxId'
        - $ref: '#/components/parameters/blockHeight'
        - $ref: '#/components/parameters/sortKey'
        - $ref: '#/components/parameters/walletAddress'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  contractTxId:
                    type: string
                    example: 'bLAgYxAdX2Ry-nt6aH2ixgvJXbpsEYm28NgJgyqfs-U'
                  address:
                    type: string
                    example: 'QGWqtJdLLgm2ehFWiiPzMaoFLD50CnGuzZIPEdoDRGQ'
                  balance:
                    type: number
                    example: 994963650
                  sortKey:
                    type: string
                    example: '000001301946,0000000000000,d2efe5278648460ed160e1d8a28fb86ab686e36cf14a3321d0a2b10c6851ea99'
                  evaluationOptions:
                    $ref: '#/components/schemas/EvaluationOptions'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/BlocklistedContract'
        '404':
          $ref: '#/components/responses/NotFound'
        '503':
          $ref: '#/components/responses/InternalServerError'

  /contract/{contractTxId}/interactions:
    get:
      summary: Returns the interactions for a given contract sorted in descending order
      description: Returns the interactions for a given contract sorted in descending order
      parameters:
        - $ref: '#/components/parameters/contractTxId'
        - $ref: '#/components/parameters/blockHeight'
        - $ref: '#/components/parameters/sortKey'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/pageSize'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  contractTxId:
                    type: string
                    example: 'bLAgYxAdX2Ry-nt6aH2ixgvJXbpsEYm28NgJgyqfs-U'
                  interactions:
                    $ref: '#/components/schemas/ContractInteraction'
                  sortKey:
                    type: string
                    example: '000001301946,0000000000000,d2efe5278648460ed160e1d8a28fb86ab686e36cf14a3321d0a2b10c6851ea99'
                  evaluationOptions:
                    $ref: '#/components/schemas/EvaluationOptions'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/BlocklistedContract'
        '404':
          $ref: '#/components/responses/NotFound'
        '503':
          $ref: '#/components/responses/InternalServerError'

  /contract/{contractTxId}/interactions/{walletAddress}:
    get:
      summary: Returns the interactions for a given contract created by a given wallet address
      parameters:
        - $ref: '#/components/parameters/contractTxId'
        - $ref: '#/components/parameters/blockHeight'
        - $ref: '#/components/parameters/sortKey'
        - $ref: '#/components/parameters/walletAddress'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/pageSize'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  contractTxId:
                    type: string
                    example: 'bLAgYxAdX2Ry-nt6aH2ixgvJXbpsEYm28NgJgyqfs-U'
                  address:
                    type: string
                    example: 'QGWqtJdLLgm2ehFWiiPzMaoFLD50CnGuzZIPEdoDRGQ'
                  interactions:
                    type: array
                    example:
                      [
                        {
                          'height': 1242905,
                          'input':
                            {
                              'function': 'evolve',
                              'value': 'PdBWdSgiNcLw4ge1kveUf8wORcdSaMJsdVXqlQFMPUg',
                            },
                          'owner': 'QGWqtJdLLgm2ehFWiiPzMaoFLD50CnGuzZIPEdoDRGQ',
                          'valid': true,
                          'id': '2wszuZi_rwoOFjowdH7GLbgdeIZBaGbMLXiOuIV-6_0',
                        },
                      ]
                  sortKey:
                    type: string
                    example: '000001301946,0000000000000,d2efe5278648460ed160e1d8a28fb86ab686e36cf14a3321d0a2b10c6851ea99'
                  evaluationOptions:
                    $ref: '#/components/schemas/EvaluationOptions'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/BlocklistedContract'
        '404':
          $ref: '#/components/responses/NotFound'
        '503':
          $ref: '#/components/responses/InternalServerError'

  /wallet/{walletAddress}/contracts:
    get:
      summary: Returns the contracts deployed, transferred to, or controlled by by a given wallet address, excluding any blocklisted contracts.
      description: Returns the contracts deployed, transferred to, or controlled by by a given wallet address, excluding any blocklisted contracts.
      parameters:
        - $ref: '#/components/parameters/walletAddress'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  address:
                    type: string
                    example: 'QGWqtJdLLgm2ehFWiiPzMaoFLD50CnGuzZIPEdoDRGQ'
                  contractTxIds:
                    type: array
                    example:
                      [
                        'gYM6k-ymF0FJMmBYXddQoWBQk8sq9A0j5WCg3fqHSM4',
                        'upfGHah4dA2b6h-o3RjZYznrFvO0tbG_jt3AeyxrAJw',
                        'cwDtGmLtFdC1P2ofZrGhVkmcQRPHYJ5nophS4Zv-qnY',
                        'qp9i4_cOoAWzys4W-FjY3yeFhUByj4EWOUPSgRFfgzU',
                        '1h8wTTxp_eLfrgEEJrdjyVxJ71A7hBVD7ky2qg3b7uc',
                        '6vAPRgFbITTdeYi-FKxfbSqE19lb4koc1Gbps7nlpFI',
                        'RXomDSAFyvqFIIGlsnUbUMcXTP8XIH8ZlOm6ZTrmL2c',
                        'qRLTxyvdHP1T8XV7p2mNT1Fa5dH7KNAJhPdCC68HWyA',
                        'HGhUVNXj6EL1Jhj71_zKt0dvPCXNtblOJSi37hXBUZQ',
                        'ymnhSYxCOsEIPFpb4gEUJ2l6u4twLu9E3xeLa6gk0Wo',
                        'M946iDywDM2pz62371ntI3bi_rzzcKOXKVMJUq4QHaY',
                        'EEBotyDhXsH8Coj3GPRP39yBqRbVQ8S7nbHm1nMELiU',
                        '2tkf6Pkk-dJ7stDkGTGLMILwFDebyf3ShVOVxhjaHtg',
                        '-NOdnNjkViGgsF7A98naG_UB7eVneX54kWkSV13ILfQ',
                        'FTBCy7FIakfSYtKZ2yfgTecDKpxiH_CI-SBgtiwQHEs',
                        '-tYkDvWQKiJF8TZTKX3ccRY8Nx7rIh21r1UNbrXAB38',
                        'GmFuXgBgtXHgVf1RJtgAyuZyDx3OfRn-HXzdDGlrFe0',
                      ]
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '503':
          $ref: '#/components/responses/InternalServerError'

  /wallet/{walletAddress}/contract/{contractTxId}:
    get:
      summary: Returns the interactions on a given contract for a given wallet address
      description: Returns the interactions on a given contract for a given wallet address
      parameters:
        - $ref: '#/components/parameters/contractTxId'
        - $ref: '#/components/parameters/walletAddress'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/pageSize'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  address:
                    type: string
                    example: 'QGWqtJdLLgm2ehFWiiPzMaoFLD50CnGuzZIPEdoDRGQ'
                  contractTxId:
                    type: string
                    example: 'bLAgYxAdX2Ry-nt6aH2ixgvJXbpsEYm28NgJgyqfs-U'
                  interactions:
                    type: array
                    example:
                      [
                        {
                          'height': 1242905,
                          'input':
                            {
                              'function': 'evolve',
                              'value': 'PdBWdSgiNcLw4ge1kveUf8wORcdSaMJsdVXqlQFMPUg',
                            },
                          'owner': 'QGWqtJdLLgm2ehFWiiPzMaoFLD50CnGuzZIPEdoDRGQ',
                          'valid': true,
                          'id': '2wszuZi_rwoOFjowdH7GLbgdeIZBaGbMLXiOuIV-6_0',
                        },
                      ]
                  evaluationOptions:
                    $ref: '#/components/schemas/EvaluationOptions'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/BlocklistedContract'
        '404':
          $ref: '#/components/responses/NotFound'
        '503':
          $ref: '#/components/responses/InternalServerError'
